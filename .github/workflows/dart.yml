name: Flutter_iOS

on:
  push:
    branches: [main]

jobs:
  build_ios_distribution:
    runs-on: macos-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Clean Derived Data
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData

      - name: Install Apple Certificate (Distribution)
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}

      - name: Install the provisioning profile (Distribution)
        env:
          PROVISIONING_CERTIFICATE_BASE64: ${{ secrets.NEWMOBILEWISEDISTRIBUTION }}
        run: |
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          echo -n "$PROVISIONING_CERTIFICATE_BASE64" | base64 --decode --output $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.16

      - name: Restore packages
        run: flutter pub get

      - name: Clean Xcode Project
        run: xcodebuild clean -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

      - name: Reinstall CocoaPods
        run: |
          cd ios
          pod deintegrate
          pod install
          cd ..

      - name: Build resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

      - name: Print current working directory
        run: pwd

      - name: List contents of the directory
        run: ls 

      - name: Build and Export .ipa (Distribution)
        run: |
          xcrun xcodebuild -workspace ios/Runner.xcworkspace -configuration Debug -scheme Runner VERBOSE_SCRIPT_LOGGING=YES COMPILER_INDEX_STORE_ENABLE=NO EXCLUDED_ARCHS=arm64 PROVISIONING_PROFILE_SPECIFIER='NewMobilewiseDistribution'
          xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/ExportOptions.plist
      - name: Run Flutter in Release Mode
        run: flutter build ipa --release

      - name: Upload build artifacts (Distribution)
        uses: actions/upload-artifact@v2
        with:
          name: ios-build-distribution
          path: build-output/ios
