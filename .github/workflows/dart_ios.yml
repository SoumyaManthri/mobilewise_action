name: Flutter_iOS_DISTRIBUTION1

on:
  workflow_dispatch:
    branches: [main]

jobs:
  build_ios_adhoc:
    runs-on: macos-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16'
          channel: 'stable'
          cache: true

      - name: Set up Code Signing 
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_DISTRIBUTION }}
          p12-password: ${{ secrets.IOS_PASSWORD }}

      - name: Install Provisioning Profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.NEW_DISTRIBUTION_IOS }}
        run: |
          PP_PATH=$RUNNER_TEMP/NEW_DISTRIBUTION_IOS.mobileprovision
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name:  Flutter setup and dependencies
        run: |
          flutter clean
          flutter pub get
          cd ios 
          rm -rf Pods/ Podfile.lock
          pod deintegrate
          pod install 
          cd ..

      - name: Clean and Build Xcode Project
        run: xcodebuild clean build -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

      - name: Build IPA
        run: flutter build ipa --release --no-codesign --target=lib/main_dev.dart --export-options-plist=ios/ExportOptions.plist

      #- name: Verify Optimization Setting
        #run: grep -A1 'SWIFT_OPTIMIZATION_LEVEL' ios/Runner.xcodeproj/project.pbxproj | grep '-Osize'
       # run: grep -A1 'SWIFT_OPTIMIZATION_LEVEL' ios/Runner.xcodeproj/project.pbxproj | grep '-Osize'

      - name: Get Optimization Level Setting
        run: grep -A1 'SWIFT_OPTIMIZATION_LEVEL' ios/Runner.xcodeproj/project.pbxproj | head -n 2
    #  - name: Verify Optimization Setting is '-Osize'
      #  run: echo ${{ steps.Get_Optimization_Level.outputs }} | grep '-Osize'



     # - name: Verify Bitcode Setting
      #  run: grep -B1 'ENABLE_BITCODE' ios/Runner.xcodeproj/project.pbxproj | grep 'YES' 

      - name: Analyze IPA Architectures
        run: lipo -info IPA/MobileWise.ipa
        id: analyze_architectures

      - name: Strip IPA (if needed)
        if: contains(steps.analyze_architectures.outputs.stdout, 'armv7')
        run: |
          cd IPA
          lipo -remove armv7 -output MobileWiseStripped.ipa MobileWise.ipa 
          mv MobileWiseStripped.ipa MobileWise.ipa

      - name: Track libswiftCore.dylib size
        run: |
          swift_lib_path=$(find Payload -name libswiftCore.dylib)
          swift_lib_size=$(stat -f%z "$swift_lib_path")
          echo "libswiftCore.dylib size: $swift_lib_size bytes"
          # Store this value to track across builds 

      - name: Compress iOS build directory
        run: tar -czf ios_build.tar.gz ios

      - name: Upload iOS build as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ios-build-artifact
          path: ios_build.tar.gz

      - name: List contents of the IPA directory with sizes
        run: |
          ls -Rl IPA

      - name: Extract IPA contents
        run: unzip -l IPA/MobileWise.ipa/MobileWise.ipa

      - name: List files and their sizes
        run: |
          unzip -l IPA/MobileWise.ipa/MobileWise.ipa
          unzip -v IPA/MobileWise.ipa/MobileWise.ipa
