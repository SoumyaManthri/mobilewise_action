name: Flutter_iOS_DISTRIBUTION1

on:
  workflow_dispatch:
    branches: [main]

jobs:
  build_ios_adhoc:
    runs-on: macos-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Create new branch
        id: create_branch
        run: |
          git checkout -b new_branch

      - name: Clean Derived Data
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData

      - name: Install Apple Certificate (Distribution)
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_DISTRIBUTION }}
          p12-password: ${{ secrets.IOS_PASSWORD }}

      - name: Install Provisioning Profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.NEW_DISTRIBUTION_IOS}}
        run: |
          PP_PATH=$RUNNER_TEMP/NEW_DISTRIBUTION_IOS.mobileprovision
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16'
          channel: 'stable'
          cache: true

      - name: Restore packages
        run: |
          flutter clean
          flutter pub get

      - name: Reinstall CocoaPods
        run: |
          cd ios
          rm -rf Pods/ Podfile.lock
          pod deintegrate
          pod install
          cd ..

      - name: Print current working directory
        run: pwd

      - name: List contents of the directory
        run: |
          ls -l
          echo "Flutter Root: ${{ env.FLUTTER_ROOT }}"
          cd ${{ env.FLUTTER_ROOT }}
          ls -R
          ls -l

      - name: Clean Xcode Project
        run: xcodebuild clean -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

      - name: Build and Resolve Swift Dependencies
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

      - name: Print Xcode Environment Variables
        run: |
          echo $PATH
          xcode-select -p

      - name: Create IPA directory in root directory
        run: mkdir -p IPA

      - name: Building IPA
        run: flutter build ipa --release --no-codesign --target=lib/main_dev.dart --export-options-plist=ios/ExportOptions.plist --target-platform ios-arm

      - name: Convert xcarchive to IPA
        run: xcodebuild -exportArchive -archivePath /Users/runner/work/mobilewise_action/mobilewise_action/build/ios/archive/Runner.xcarchive -exportPath IPA/MobileWise.ipa -exportOptionsPlist ios/ExportOptions.plist

      - name: Analyze IPA contents
        run: lipo -info IPA/MobileWise.ipa

      #- name: Strip Unwanted dependencies
       # run: |
        #  cd IPA
         # lipo -remove i386 -remove x86_64 -remove armv7 -output MobileWiseStripped.ipa MobileWise.ipa
         
          
      - name: List contents of the IPA directory with sizes
        run: |
          ls -Rl IPA


      #- name: Find IPA file
       # id: find_ipa
        #run: |
         # cd IPA
          ## Find IPA files smaller than 30MB
          #selected_ipa=$(find . -name "*.ipa" -size -30M)
          #echo "::set-output name=ipa_path::$selected_ipa"
          #echo "Selected IPA files: $selected_ipa"

      #- name: Use selected IPA file
       # run: |
        #  selected_ipa_path="${{ steps.find_ipa.outputs.ipa_path }}"
         # echo "Selected IPA file: $selected_ipa_path"
          # Do whatever you need with the selected IPA file

      #- name: List contents of the IPA directory
       # run: |
        #  ls -R IPA

      - name: Upload IPA as artifact
        uses: actions/upload-artifact@v2 
        with:
         name: ios-ipa
         path: IPA/MobileWise.ipa
      - name: Extract IPA contents
        run: unzip -l IPA/MobileWise.ipa/MobileWise.ipa

      - name: List files and their sizes
        run: |
          unzip -l IPA/MobileWise.ipa/MobileWise.ipa
          unzip -v IPA/MobileWise.ipa/MobileWise.ipa


